generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Roles {
  id    String  @id(map: "roles_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name  String
  Users Users[]
}

model Tasks {
  id                          String  @id(map: "tasks_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                        String  @db.VarChar(255)
  assignee                    String? @db.Uuid
  description                 String?
  reporter                    String  @db.Uuid
  Users_Tasks_assigneeToUsers Users?  @relation("Tasks_assigneeToUsers", fields: [assignee], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "assignee_id")
  Users_Tasks_reporterToUsers Users   @relation("Tasks_reporterToUsers", fields: [reporter], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reporter_id")
}

model Users {
  id                          String   @id(map: "users_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role                        String?  @db.Uuid
  first_name                  String
  last_name                   String?
  email                       String   @unique
  password                    String?
  auth_type                   AuthType @default(EMAIL)
  Tasks_Tasks_assigneeToUsers Tasks[]  @relation("Tasks_assigneeToUsers")
  Tasks_Tasks_reporterToUsers Tasks[]  @relation("Tasks_reporterToUsers")
  Roles                       Roles?   @relation(fields: [role], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "role_id")
}

enum AuthType {
  GOOGLE
  EMAIL
}
